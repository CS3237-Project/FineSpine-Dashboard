# -*- coding: utf-8 -*-
"""Posture.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZmxIfhohFLqpTBri4xLVwgC3swsaLrAH
"""

import numpy as np
import pandas as pd
from flask import Flask, request, jsonify, make_response
from flask_cors import CORS

flask_app = Flask(__name__)
cors = CORS();

@flask_app.route("/processData", methods=["GET"])
def processData():
  df_activity = pd.read_csv(r'./data/UserActivity.txt', header=None)
  df_activity.columns = ["time", "activity"]

  df_angles = pd.read_csv(r'./data/angleList.txt', header=None)
  df_angles.columns = ["time", "angle", "posture", "info"]

  df_activity['activity'].value_counts()

  activityRatio = [df_activity['activity'].value_counts().Sitting, df_activity['activity'].value_counts().Standing, df_activity['activity'].value_counts().Walking]

  df_angles['posture'].value_counts()

  postureRatio = [df_angles['posture'].value_counts().GOOD, df_angles['posture'].value_counts().BAD]

  df_activity['time'] = pd.to_datetime(df_activity['time'])  

  df_activity_hours = df_activity.groupby([df_activity['time'].dt.hour]).activity.sum()

  df_activity.groupby([df_activity['time'].dt.hour]).activity.value_counts()

  df_act_counts = df_activity.groupby([df_activity['time'].dt.hour, df_activity['activity']]).agg(activity=('activity', 'unique'), counts=('time', 'nunique'))

  sitting = []

  for i in range(24):
    try:
      sitting.append(df_act_counts.filter(items = [(i, 'Sitting')], axis = 0)['counts'].values[0])
    except:
      sitting.append(0)

  standing = []

  for i in range(24):
    try:
      standing.append(df_act_counts.filter(items = [(i, 'Standing')], axis = 0)['counts'].values[0])
    except:
      standing.append(0)

  walking = []

  for i in range(24):
    try:
      walking.append(df_act_counts.filter(items = [(i, 'Walking')], axis = 0)['counts'].values[0])
    except:
      walking.append(0)

  activityData = [sitting, standing, walking]

  response = {}
  response = jsonify({
      'postureRatio': str(postureRatio),
      # postureData: postureData,
      'activityRatio':str(activityRatio),
      'activityData': str(activityData),
  })
  response.headers.add("Access-Control-Allow-Origin", "*")
  response.headers.add("Access-Control-Allow-Headers", "*")
  response.headers.add("Access-Control-Allow-Methods", "*")

  print(response)
  return response

if __name__ == "__main__":
    flask_app.debug = True
    flask_app.run(debug=True)